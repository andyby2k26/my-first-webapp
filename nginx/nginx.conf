# nginx/nginx.conf
# This is the Nginx configuration file.
# It sets up Nginx as a reverse proxy for Flask applications.

worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # Include standard MIME types
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    server {
        listen 80; # Nginx listens on port 80
        server_name localhost; # Server name for this block

        # Location block for App 1
        # Requests to /app1/ will be routed here
        location /app1/ {
            # Removed the trailing slash from proxy_pass.
            # This means Nginx will forward the full path (e.g., /app1/about)
            # to the app1 container. ProxyFix in Flask will then correctly
            # separate /app1 as SCRIPT_NAME and /about as PATH_INFO.
            proxy_pass http://app1:5000;

            # Standard proxy headers to pass client information
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Crucial: Set SCRIPT_NAME header to inform Flask about its external prefix
            proxy_set_header SCRIPT_NAME /app1;
        }

        # Location block for App 2
        # Requests to /app2/ will be routed here
        location /app2/ {
            # CRUCIAL CHANGE: Removed the trailing slash from proxy_pass.
            # This means Nginx will forward the full path (e.g., /app2/about)
            # to the app2 container. ProxyFix in Flask will then correctly
            # separate /app2 as SCRIPT_NAME and /about as PATH_INFO.
            proxy_pass http://app2:5000;

            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Crucial: Set SCRIPT_NAME header to inform Flask about its external prefix
            proxy_set_header SCRIPT_NAME /app2;
        }

        # Root location: A simple welcome message if no specific app path is hit
        location / {
            return 200 'Welcome to the Nginx proxy! Try accessing /app1/ or /app2/';
            add_header Content-Type text/plain;
        }
    }
}