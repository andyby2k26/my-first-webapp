version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
    networks:
      - webapp_network

  app1:
    build:
      context: ./app1
      dockerfile: Dockerfile
    expose:
      - "5000"
    networks:
      - webapp_network
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/mydatabase
      SECRET_KEY: 'your-very-long-and-secure-random-secret-key-for-app1'

  app2:
    build:
      context: ./app2
      dockerfile: Dockerfile
    expose:
      - "5000"
    networks:
      - webapp_network
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/mydatabase
      SECRET_KEY: 'your-very-long-and-secure-random-secret-key-for-app2'

  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - webapp_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  webapp_network:
    driver: bridge

volumes:
  db_data: